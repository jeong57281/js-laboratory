{"componentChunkName":"component---src-templates-post-tsx","path":"/post/baekjoon/2529.js","result":{"data":{"file":{"ext":".js","name":"2529","fields":{"content":"const fs = require(\"fs\");\nconst filePath = process.platform === \"linux\" ? \"/dev/stdin\" : \"./input\";\nconst stdin = fs\n  .readFileSync(filePath)\n  .toString()\n  .trim()\n  .split(\"\\n\")\n  .map((s) => s.trim());\nconst input = (() => {\n  let line = 0;\n  return () => stdin[line++];\n})();\n\nconst k = parseInt(input());\n\nconst tmp = input().split(\" \");\nconst A = [\">\", ...tmp, \">\"];\nconst RA = [\"<\", ...tmp, \"<\"];\n\nconst l = [];\nconst g = [];\n\nfor (let i = 0; i < k + 2; i++) {\n  if (A[i] === \">\") {\n    l.push(i);\n  }\n}\n\nfor (let i = 0; i < k + 2; i++) {\n  if (RA[i] === \"<\") {\n    g.push(i);\n  }\n}\n\nconst ma = [];\nconst mi = [];\n\nfor (let i = 1; i < l.length; i++) {\n  for (let j = l[i] - 1; j >= l[i - 1]; j--) {\n    ma.push(9 - j);\n  }\n}\n\nfor (let i = 1; i < g.length; i++) {\n  for (let j = g[i] - 1; j >= g[i - 1]; j--) {\n    mi.push(j);\n  }\n}\n\nconsole.log(ma.join(\"\"));\nconsole.log(mi.join(\"\"));\n","stampObject":{"modified":1676785464,"created":1676785464}}},"markdownRemark":{"html":"<p><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>10</mn><mo stretchy=\"false\">!</mo></mrow><annotation encoding=\"application/x-tex\">10!</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">10</span><span class=\"mclose\">!</span></span></span></span></span>은 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn><mo separator=\"true\">,</mo><mn>628</mn><mo separator=\"true\">,</mo><mn>800</mn></mrow><annotation encoding=\"application/x-tex\">3,628,800</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">628</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">800</span></span></span></span></span>으로 큰 수가 아니었다...</p>\n<p>back tracking으로 충분히 해결할 수 있는 문제였는데 기하급수적으로 증가하는 factorial  경우의 수라는 것에 쫄아서 규칙을 찾아서 푸느라 시간이 오래 걸렸다.</p>\n<h2>풀이 방법</h2>\n<ul>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">k+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span>자리 정수 중 <strong>최대값</strong>을 찾을 때</li>\n</ul>\n<ol>\n<li>감소하는 부등호 '<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>></mo></mrow><annotation encoding=\"application/x-tex\">></annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">></span></span></span></span></span>'가 나올 때 마다 바로 이전 부등호와의 거리(부등호 '<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>&#x3C;</mo></mrow><annotation encoding=\"application/x-tex\">&#x3C;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">&#x3C;</span></span></span></span></span>'의 개수)를 계산한다. (올바른 계산을 위해 양 끝에 부등호 '<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>></mo></mrow><annotation encoding=\"application/x-tex\">></annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">></span></span></span></span></span>'가 있다고 가정한다. 10과 -1)</li>\n<li>사용되지 않은 0~9사이값 중 가장 큰 값으로부터, 계산한 거리만큼의 개수를 골라 정답 배열에 오름차순으로 나열한다.</li>\n</ol>\n<deckgo-highlight-code language=\"md\" theme=\"one-light\"  >\n          <code slot=\"code\">10 &gt; &lt; &lt; &lt; &gt; &lt; &lt; &gt; &lt; &gt; &gt; -1\n10 &gt; 6 &lt; 7 &lt; 8 &lt; 9 &gt; &lt; &lt; &gt; &lt; &gt; &gt; -1\n10 &gt; 6 &lt; 7 &lt; 8 &lt; 9 &gt; 3 &lt; 4 &lt; 5 &gt; &lt; &gt; &gt; -1\n10 &gt; 6 &lt; 7 &lt; 8 &lt; 9 &gt; 3 &lt; 4 &lt; 5 &gt; 1 &lt; 2 &gt; &gt; -1\n10 &gt; 6 &lt; 7 &lt; 8 &lt; 9 &gt; 3 &lt; 4 &lt; 5 &gt; 1 &lt; 2 &gt; 0 &gt; -1</code>\n        </deckgo-highlight-code>\n<ul>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">k+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span>자리 정수 중 <strong>최소값</strong>을 찾을 때</li>\n</ul>\n<p>최대값을 구할 때와 모든 조건을 반대로 생각하면 된다.</p>","frontmatter":{"title":"2529번: 부등호"}}},"pageContext":{"slug":"baekjoon/2529.js","slugNoExt":"baekjoon/2529","repoName":"algorithm-storage","userName":"jeong57281","profileUrl":"https://avatars.githubusercontent.com/u/44913775?v=4","utterances":"jeong57281/jeong57281.github.io","googleSiteVerification":"LwKjAts-rLkskyg9wgFh0L-OC3Y2Eo2T4SBrqPjxu8c"}},"staticQueryHashes":[],"slicesMap":{}}