{"componentChunkName":"component---src-templates-post-tsx","path":"/post/baekjoon/12015.js","result":{"data":{"file":{"ext":".js","name":"12015","fields":{"content":"const fs = require(\"fs\");\nconst filePath = process.platform === \"linux\" ? \"/dev/stdin\" : \"./input\";\nconst stdin = fs\n  .readFileSync(filePath)\n  .toString()\n  .trim()\n  .split(\"\\n\")\n  .map((s) => s.trim());\nconst input = (() => {\n  let line = 0;\n  return () => stdin[line++];\n})();\n\nconst N = parseInt(input());\n\nconst A = input().split(\" \").map(Number);\n\nconst L = [];\n\nconst lowerBound = (arr, target) => {\n  let left = 0;\n  let right = arr.length - 1;\n  let middle;\n\n  while (left <= right) {\n    middle = Math.floor((left + right) / 2);\n\n    if (target <= arr[middle]) {\n      right = middle - 1;\n    } else {\n      left = middle + 1;\n    }\n  }\n\n  return target > arr[middle] ? middle + 1 : middle;\n};\n\nfor (let i = 0; i < N; i++) {\n  if (!L.length || L[L.length - 1] < A[i]) {\n    L.push(A[i]);\n  } else {\n    const index = lowerBound(L, A[i]);\n    L[index] = A[i];\n  }\n}\n\nconsole.log(L.length);\n","stampObject":{"modified":1675405227,"created":1675405225}}},"markdownRemark":{"html":"<p>12015 최장 증가 부분 수열 LIS Longest Increasing Subsequence 풀이 작성</p>","frontmatter":{"title":"12015번: 최장 증가 부분 수열"}}},"pageContext":{"slug":"baekjoon/12015.js","slugNoExt":"baekjoon/12015","repoName":"algorithm-storage","userName":"jeong57281","profileUrl":"https://avatars.githubusercontent.com/u/44913775?v=4","utterances":"jeong57281/jeong57281.github.io","googleSiteVerification":"LwKjAts-rLkskyg9wgFh0L-OC3Y2Eo2T4SBrqPjxu8c"}},"staticQueryHashes":[],"slicesMap":{}}