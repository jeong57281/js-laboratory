{"componentChunkName":"component---src-templates-post-tsx","path":"/post/codeforces/852/c.js","result":{"data":{"file":{"ext":".js","name":"c","fields":{"content":"\"use strict\";\nprocess.stdin.resume();\nprocess.stdin.setEncoding(\"utf-8\");\nlet [inputString, currentLine] = [\"\", 0];\nprocess.stdin.on(\"data\", (inputStdin) => (inputString += inputStdin));\nprocess.stdin.on(\"end\", (_) => {\n  inputString = inputString\n    .trim()\n    .split(\"\\n\")\n    .map((string) => string.trim());\n  main();\n});\nconst input = () => inputString[currentLine++];\n\nclass Heap {\n  constructor(compare = (a, b) => a < b) {\n    // default : 최소 힙\n    this.heap = [null];\n    this.compare = compare;\n  }\n  insert(item) {\n    this.heap.push(item);\n    let i = this.heap.length - 1;\n    while (i !== 1 && this.compare(item, this.heap[Math.floor(i / 2)])) {\n      this.heap[i] = this.heap[Math.floor(i / 2)];\n      i = Math.floor(i / 2);\n    }\n    this.heap[i] = item;\n  }\n  delete() {\n    const item = this.heap[1];\n    const tmp = this.heap.pop();\n    const len = this.heap.length - 1;\n    let parent = 1;\n    let child = 2;\n    while (child <= len) {\n      if (child < len && this.compare(this.heap[child + 1], this.heap[child]))\n        child += 1;\n      if (this.compare(tmp, this.heap[child])) break;\n      this.heap[parent] = this.heap[child];\n      parent = child;\n      child *= 2;\n    }\n    if (this.heap.length > 1) this.heap[parent] = tmp;\n    return item;\n  }\n  empty() {\n    return this.heap.length === 1;\n  }\n}\n\nclass PriorityQueue {\n  constructor(compare) {\n    this.heap = new Heap(compare);\n  }\n  empty() {\n    return this.heap.empty();\n  }\n  push(item) {\n    this.heap.insert(item);\n  }\n  pop() {\n    if (!this.empty()) return this.heap.delete();\n    else return null;\n  }\n}\n\nconst main = () => {\n  let tc = parseInt(input());\n\n  while (tc--) {\n    const n = parseInt(input());\n\n    const a = input().split(\" \").map(Number);\n\n    const maxPq = new PriorityQueue((a, b) => a > b);\n\n    const minPq = new PriorityQueue((a, b) => a < b);\n\n    for (let i = 1; i <= n; i++) {\n      maxPq.push(i);\n      minPq.push(i);\n    }\n\n    const number = new Set(\n      Array(n)\n        .fill(null)\n        .map((value, index) => index + 1)\n    );\n\n    let l = 0;\n    let r = n - 1;\n\n    while (l < r) {\n      const lv = a[l];\n      const rv = a[r];\n\n      let maxValue, minValue;\n\n      while (!maxPq.empty()) {\n        maxValue = maxPq.heap.heap[1];\n\n        if (!number.has(maxValue)) {\n          maxPq.pop();\n        } else {\n          break;\n        }\n      }\n\n      while (!minPq.empty()) {\n        minValue = minPq.heap.heap[1];\n\n        if (!number.has(minValue)) {\n          minPq.pop();\n        } else {\n          break;\n        }\n      }\n\n      if (lv === maxValue || lv === minValue) {\n        l++;\n        number.delete(lv);\n      } else if (rv === maxValue || rv === minValue) {\n        r--;\n        number.delete(rv);\n      } else {\n        break;\n      }\n    }\n\n    if (Math.abs(l - r) < 2) {\n      console.log(-1);\n    } else {\n      console.log(l + 1, r + 1);\n    }\n  }\n};\n","stampObject":{"modified":1676200016,"created":1676200012}}},"markdownRemark":{"html":"<p>이중 우선순위 큐..?</p>","frontmatter":{"title":""}}},"pageContext":{"slug":"codeforces/852/c.js","slugNoExt":"codeforces/852/c","repoName":"algorithm-storage","userName":"jeong57281","profileUrl":"https://avatars.githubusercontent.com/u/44913775?v=4","utterances":"jeong57281/jeong57281.github.io","googleSiteVerification":"LwKjAts-rLkskyg9wgFh0L-OC3Y2Eo2T4SBrqPjxu8c"}},"staticQueryHashes":[],"slicesMap":{}}