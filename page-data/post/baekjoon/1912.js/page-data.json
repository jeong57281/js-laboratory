{"componentChunkName":"component---src-templates-post-tsx","path":"/post/baekjoon/1912.js","result":{"data":{"file":{"ext":".js","name":"1912","fields":{"content":"// baekjoon input template\n// prettier-ignore\n{var fs=require('fs');var filePath=process.platform==='linux'?'/dev/stdin':'./input';var stdin=fs.readFileSync(filePath).toString().trim().split('\\n').map(s=>s.trim());var input=(()=>{var line=0;return()=>stdin[line++]})();var SI=()=>input();var NI=()=>parseInt(input());var SAI=(sep=' ')=>input().split(sep);var NAI=(sep=' ')=>input().split(sep).map(Number);var CA=(n,v=null)=>Array(n).fill(v);var CAA=(n,m,v=null)=>Array.from(Array(n),()=>Array(m).fill(v));var CAAA=(n,m,h,v=null)=>Array.from(Array(n),()=>Array.from(Array(m),()=>Array(h).fill(v)));var P=console.log;}\n\nconst N = NI();\n\nconst A = NAI();\n\nlet l = 0;\nlet r = 0;\n\nlet cur = 0;\nlet ans = -Infinity;\n\n/**\n * <투 포인터 풀이>\n * 현재 범위에서 연속된 수의 합이 음수이면 모든 값을 버리고\n * 새롭게 다시 계산하고, 양수이면 범위를 포함시키는 것이 최적해이므로\n * 초기화하지 않고 범위를 늘려나가며 최대값을 갱신한다.\n * 0의 경우는 포함해도되고, 포함하지 않아도 상관없으므로 등호는 어디에 들어가도 상관이 없다.\n */\nwhile (r < N) {\n  if (cur >= 0) {\n    cur += A[r];\n    ans = Math.max(ans, cur);\n    r++;\n  } else {\n    cur = 0;\n    l = r;\n  }\n}\n\nP(ans);\n","stampObject":{"modified":1679651816,"created":1679651816}}},"markdownRemark":null},"pageContext":{"slug":"baekjoon/1912.js","slugNoExt":"baekjoon/1912","repoName":"algorithm-storage","userName":"jeong57281","profileUrl":"https://avatars.githubusercontent.com/u/44913775?v=4","utterances":"jeong57281/jeong57281.github.io","googleSiteVerification":"LwKjAts-rLkskyg9wgFh0L-OC3Y2Eo2T4SBrqPjxu8c"}},"staticQueryHashes":[],"slicesMap":{}}