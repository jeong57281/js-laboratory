{"componentChunkName":"component---src-templates-post-tsx","path":"/post/baekjoon/17822.js","result":{"data":{"file":{"ext":".js","name":"17822","fields":{"content":"const fs = require(\"fs\");\nconst filePath = process.platform === \"linux\" ? \"/dev/stdin\" : \"./input\";\nconst stdin = fs\n  .readFileSync(filePath)\n  .toString()\n  .trim()\n  .split(\"\\n\")\n  .map((s) => s.trim());\nconst input = (() => {\n  let line = 0;\n  return () => stdin[line++];\n})();\n\nconst dy = [-1, 1, 0, 0];\nconst dx = [0, 0, -1, 1];\n\nconst DIRECTION = {\n  RIGHT: 0,\n  LEFT: 1,\n};\n\nconst [N, M, T] = input().split(\" \").map(Number);\n\nconst arr = Array.from(Array(N), () => Array(M).fill(\"x\"));\n\nfor (let i = 0; i < N; i++) {\n  const tmp = input().split(\" \").map(Number);\n\n  for (let j = 0; j < M; j++) {\n    arr[i][j] = tmp[j];\n  }\n}\n\nconst nearSearch = (array) => {\n  let isChange = false;\n\n  const tmp = [];\n\n  for (let y = 0; y < N; y++) {\n    for (let x = 0; x < M; x++) {\n      for (let i = 0; i < 4; i++) {\n        let ny = y + dy[i];\n        let nx = x + dx[i];\n\n        if (ny === -1) {\n          continue;\n        }\n\n        if (ny === N) {\n          continue;\n        }\n\n        if (nx === -1) {\n          nx = M - 1;\n        }\n\n        if (nx === M) {\n          nx = 0;\n        }\n\n        if (array[y][x] === \"x\" || array[ny][nx] === \"x\") {\n          continue;\n        }\n\n        if (array[y][x] === array[ny][nx]) {\n          tmp.push({ y: ny, x: nx });\n          tmp.push({ y, x });\n        }\n      }\n    }\n  }\n\n  if (tmp.length) {\n    isChange = true;\n\n    for (let i = 0; i < tmp.length; i++) {\n      const { y, x } = tmp[i];\n\n      array[y][x] = \"x\";\n    }\n  }\n\n  return isChange;\n};\n\nconst updateArray = (array) => {\n  let sum = 0;\n\n  let tmp = [];\n\n  for (let y = 0; y < N; y++) {\n    for (let x = 0; x < M; x++) {\n      if (!isNaN(array[y][x])) {\n        sum += array[y][x];\n\n        tmp.push({ y, x });\n      }\n    }\n  }\n\n  const average = sum / tmp.length;\n\n  for (let i = 0; i < tmp.length; i++) {\n    const { y, x } = tmp[i];\n\n    if (array[y][x] < average) {\n      array[y][x]++;\n    } else if (array[y][x] > average) {\n      array[y][x]--;\n    }\n  }\n};\n\nconst getSumArray = (array) => {\n  let sum = 0;\n\n  for (let y = 0; y < N; y++) {\n    for (let x = 0; x < M; x++) {\n      if (!isNaN(array[y][x])) {\n        sum += array[y][x];\n      }\n    }\n  }\n\n  return sum;\n};\n\nconst rotateArray = (array, index, direction, moveCount) => {\n  if (direction === DIRECTION.LEFT) {\n    for (let i = 0; i < moveCount; i++) {\n      array[index].push(array[index].shift());\n    }\n  } else if (direction === DIRECTION.RIGHT) {\n    for (let i = 0; i < moveCount; i++) {\n      array[index].unshift(array[index].pop());\n    }\n  }\n};\n\nfor (let i = 0; i < T; i++) {\n  const [x, d, k] = input().split(\" \").map(Number);\n\n  for (let j = x; j <= N; j += x) {\n    rotateArray(arr, j - 1, d, k);\n  }\n\n  if (!nearSearch(arr)) {\n    updateArray(arr);\n  }\n}\n\nconsole.log(getSumArray(arr));\n","stampObject":{"modified":1676081872,"created":1676081872}}},"markdownRemark":{"html":"<p>문제풀이에 걸린 시간 : 1시간 18분</p>\n<p>오래걸린 사유</p>\n<ol>\n<li>1번째 원판과 N번째 원판은 인접하지 않는다는 사실을 뒤늦게 암</li>\n<li>지워진 숫자를 'x'로 표현하였는데, 인접한 두 숫자가 모두 'x'로 같을 때 숫자가 지워졌다고 판단함</li>\n<li>원판의 숫자를 저장하는 배열을 N+1 x M+1 크기로 잡아, rotate가 제대로 되지 않은 점</li>\n<li>원판의 숫자가 평균보다 같을 때의 처리를, 평균보다 클 때와 같게 해주었음</li>\n<li>원판에서 인접하고 같은 숫자를 지울 때, 발견된 쌍을 지우는 작업을 일괄로 처리하지 않아서 반례가 존재했음</li>\n</ol>","frontmatter":{"title":"17822번: 원판 돌리기"}}},"pageContext":{"slug":"baekjoon/17822.js","slugNoExt":"baekjoon/17822","repoName":"algorithm-storage","userName":"jeong57281","profileUrl":"https://avatars.githubusercontent.com/u/44913775?v=4","utterances":"jeong57281/jeong57281.github.io","googleSiteVerification":"LwKjAts-rLkskyg9wgFh0L-OC3Y2Eo2T4SBrqPjxu8c"}},"staticQueryHashes":[],"slicesMap":{}}