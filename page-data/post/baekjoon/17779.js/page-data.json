{"componentChunkName":"component---src-templates-post-tsx","path":"/post/baekjoon/17779.js","result":{"data":{"file":{"ext":".js","name":"17779","fields":{"content":"// prettier-ignore\n{const t=require('fs');const e=process.platform==='linux'?'/dev/stdin':'./input';const r=t.readFileSync(e).toString().trim().split('\\n').map(t=>t.trim());const i=(()=>{let t=0;return()=>r[t++]})();global.input=i;global.SI=()=>i();global.NI=()=>parseInt(i());global.SAI=(t=' ')=>i().split(t);global.NAI=(t=' ')=>i().split(t).map(Number);global.A=(t,e=null)=>Array(t).fill(e);global.AA=(t,e,r=null)=>Array.from(Array(t),()=>Array(e).fill(r));global.AAA=(t,e,r,i=null)=>Array.from(Array(t),()=>Array.from(Array(e),()=>Array(r).fill(i)));global.P=console.log;const s=(t,e)=>{let r=0;let i=t.length;let s;while(r<i){s=Math.floor((r+i)/2);if(t[s]<e){r=s+1}else{i=s}}return i};global.lowerBound=s;class h{constructor(t){this.item=t;this.next=null}}class l{constructor(){this._size=0;this._front=null;this._rear=null}push(t){const e=new h(t);if(this.empty()){this._front=this._rear=e;this._size++;return}this._rear.next=e;this._rear=e;this._size++}pop(){if(this.empty()){return-1}if(this.size()===1){this._size--;const t=this._front.item;this._front=this._rear=null;return t}this._size--;const t=this._front.item;this._front=this._front.next;return t}size(){return this._size}empty(){return!this._size?1:0}front(){if(this.empty()){return-1}return this._front.item}back(){if(this.empty()){return-1}return this._rear.item}}global.QueueNode=h;global.Queue=l;class n{constructor(t=(t,e)=>t<e){this.heap=[null];this.compare=t}insert(t){this.heap.push(t);let e=this.heap.length-1;while(e!==1&&this.compare(t,this.heap[Math.floor(e/2)])){this.heap[e]=this.heap[Math.floor(e/2)];e=Math.floor(e/2)}this.heap[e]=t}delete(){const t=this.heap[1],e=this.heap.pop(),r=this.heap.length-1;let i=1,s=2;while(s<=r){if(s<r&&this.compare(this.heap[s+1],this.heap[s])){s+=1}if(this.compare(e,this.heap[s])){break}this.heap[i]=this.heap[s];i=s;s*=2}if(this.heap.length>1){this.heap[i]=e}return t}empty(){return this.heap.length===1}}class a{constructor(t){this.heap=new n(t)}empty(){return this.heap.empty()}peek(){return this.heap.heap[1]}push(t){this.heap.insert(t)}pop(){if(!this.empty())return this.heap.delete();else return null}}global.Heap=n;global.PriorityQueue=a;class o{constructor(t){this.parent=Array(t).fill(null).map((t,e)=>e);this.rank=Array(t+1).fill(1)}find(t){if(this.parent[t]===t){return this.parent[t]}return this.parent[t]=this.find(this.parent[t])}merge(t,e){t=this.find(t);e=this.find(e);if(t===e){return}if(this.rank[t]>this.rank[e]){[t,e]=[e,t]}this.parent[t]=e;if(this.rank[t]===this.rank[e]){this.rank[e]++}}}global.DisjointSet=o}\n\nconst N = NI();\n\nconst arr = [];\n\nfor (let i = 0; i < N; i++) {\n  arr.push(NAI());\n}\n\nconst dy = [-1, 1, 0, 0];\nconst dx = [0, 0, 1, -1];\n\nconst conqure = (cy, cx, v, area, visited) => {\n  if (area[cy][cx] === 0) {\n    visited[cy][cx] = true;\n    area[cy][cx] = v;\n  }\n\n  for (let i = 0; i < 4; i++) {\n    const ny = cy + dy[i];\n    const nx = cx + dx[i];\n\n    if (ny < 0 || ny >= N || nx < 0 || nx >= N) {\n      continue;\n    }\n\n    if (visited[ny][nx]) {\n      continue;\n    }\n\n    if (area[ny][nx] === 0) {\n      conqure(ny, nx, v, area, visited);\n    }\n  }\n};\n\nlet ans = Infinity;\n\nfor (let y = 0; y < N; y++) {\n  for (let x = 0; x < N; x++) {\n    for (let d1 = 1; d1 < N - 1; d1++) {\n      for (let d2 = 1; d2 < N - 1; d2++) {\n        if (\n          x + d1 + d2 <= N - 1 &&\n          0 <= y - d1 &&\n          y - d1 < y &&\n          y < y + d2 &&\n          y + d2 <= N - 1\n        ) {\n          const area = AA(N, N, 0);\n          const visited = AA(N, N, false);\n\n          for (let i = 0; i <= d1; i++) {\n            area[y - i][x + i] = 5;\n          }\n\n          for (let i = 0; i <= d2; i++) {\n            area[y - d1 + i][x + d1 + i] = 5;\n          }\n\n          for (let i = 0; i <= d2; i++) {\n            area[y + i][x + i] = 5;\n          }\n\n          for (let i = 0; i <= d1; i++) {\n            area[y + d2 - i][x + d2 + i] = 5;\n          }\n\n          for (let i = 0; i < x; i++) {\n            area[y][i] = 3;\n          }\n\n          for (let i = 0; i < y - d1; i++) {\n            area[i][x + d1] = 1;\n          }\n\n          for (let i = x + d1 + d2 + 1; i < N; i++) {\n            area[y - d1 + d2][i] = 2;\n          }\n\n          for (let i = y + d2 + 1; i < N; i++) {\n            area[i][x + d2] = 4;\n          }\n\n          conqure(0, 0, 1, area, visited);\n          conqure(0, N - 1, 2, area, visited);\n          conqure(N - 1, 0, 3, area, visited);\n          conqure(N - 1, N - 1, 4, area, visited);\n\n          const sum = A(6, 0);\n\n          for (let r = 0; r < N; r++) {\n            for (let c = 0; c < N; c++) {\n              const num = area[r][c];\n              const count = arr[r][c];\n              switch (num) {\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                  sum[num] += count;\n                  break;\n                case 5:\n                case 0:\n                  sum[5] += count;\n                  break;\n              }\n            }\n          }\n\n          const maxC = Math.max(...sum.slice(1));\n          const minC = Math.min(...sum.slice(1));\n\n          ans = Math.min(ans, Math.abs(maxC - minC));\n        }\n      }\n    }\n  }\n}\n\nconsole.log(ans);\n","stampObject":{"modified":1677237234,"created":1677237234}}},"markdownRemark":{"html":"<h3>시간이 오래 걸린 이유</h3>\n<ol>\n<li>y, x 가 사용된 2중 for문 안에서 y, x변수를 한번 더 사용함</li>\n</ol>\n<p>=> 어느정도 깊이가 깊어지면 가독성도 떨어지고 변수가 중복될 위험이 있으니 함수로 분리하자.\n2. ans = Math.max(ans, value) 에서 Math.max안에 ans를 생략해버림\n3. 영역이 총 5개인데, N개 영역의 인구수를 저장하는 배열(0으로 초기화된)을 만들어버려서 최소값이 제대로 구해지지 않았음.</p>","frontmatter":{"title":"17779번: 게리맨더링 2"}}},"pageContext":{"slug":"baekjoon/17779.js","slugNoExt":"baekjoon/17779","repoName":"algorithm-storage","userName":"jeong57281","profileUrl":"https://avatars.githubusercontent.com/u/44913775?v=4","utterances":"jeong57281/jeong57281.github.io","googleSiteVerification":"LwKjAts-rLkskyg9wgFh0L-OC3Y2Eo2T4SBrqPjxu8c"}},"staticQueryHashes":[],"slicesMap":{}}