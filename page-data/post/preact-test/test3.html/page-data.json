{"componentChunkName":"component---src-templates-post-tsx","path":"/post/preact-test/test3.html","result":{"data":{"file":{"ext":".html","name":"test3","fields":{"content":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Document</title>\n  <style>\n    * {\n      padding: 0;\n      margin: 0;\n      box-sizing: border-box;\n    }\n\n    #app>div>button {\n      background: linear-gradient(90deg,\n          rgba(2, 0, 36, 1) 0%,\n          rgba(9, 9, 121, 1) 35%,\n          rgba(0, 212, 255, 1) 100%);\n      color: white;\n    }\n  </style>\n</head>\n\n<body>\n  <div id=\"root\"></div>\n  <script type=\"module\">\n    import { useState, useEffect } from '../hooks/src/index.js';\n    import { memo } from '../compat/src/memo.js';\n    import { render, createElement as h } from './index.js';\n\n    function App() {\n      const [visible, setVisible] = useState(true);\n\n      const handleToggleVisible = () => setVisible(!visible);\n\n      return (\n        h(\n          'div',\n          { id: 'app' },\n          h('button', { onclick: handleToggleVisible }, 'on/off'),\n          h('hr', null, null),\n          visible && h(\n            'p',\n            null,\n            'hello'\n          )\n        )\n      )\n    }\n\n    render(\n      h(App), // App() 으로 주면 곧바로 함수 내부가 실행되기 때문에 hooks 를 사용할 수 없다.\n      document.querySelector('#root')\n    );\n\n    // 여기서 또 데이터를 삭제하기 위한 식별자를 html props 에 저장해야만 되는지 고민된다.\n    // 렌더링이 되면 HTMLLiElement 를 키, 값을 id 로 하는 데이터를 관리하면 사용자 조작을 막을 수 있다.\n    // 근데 react 에서는 어떻게 구현하지...? useRef...?\n  </script>\n</body>\n\n</html>","stampObject":{"modified":1667233157,"created":1667233157}}},"markdownRemark":null},"pageContext":{"slug":"preact-test/test3.html","slugNoExt":"preact-test/test3","repoName":"js-laboratory","userName":"jeong57281","profileUrl":"https://avatars.githubusercontent.com/u/44913775?v=4"}},"staticQueryHashes":[],"slicesMap":{}}